// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieNight.Code;

namespace MovieNight.Code.Migrations
{
    [DbContext(typeof(MovieDayDBContext))]
    [Migration("20190125195801_first_migration")]
    partial class first_migration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MovieNight.Domain.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<int?>("CountryId");

                    b.Property<string>("PostalCode");

                    b.Property<string>("StateProvince");

                    b.Property<string>("Street");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("MovieNight.Domain.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("MovieNight.Domain.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("MovieNight.Domain.Models.Library", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressId");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Libraries");
                });

            modelBuilder.Entity("MovieNight.Domain.Models.Membership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Level");

                    b.Property<decimal>("Price");

                    b.HasKey("Id");

                    b.ToTable("Memberships");
                });

            modelBuilder.Entity("MovieNight.Domain.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<TimeSpan>("Durration");

                    b.Property<int?>("GenreId");

                    b.Property<string>("Imdb");

                    b.Property<int?>("RatingId");

                    b.Property<string>("Summary");

                    b.Property<string>("Title");

                    b.Property<int?>("UserId");

                    b.Property<int?>("UserId1");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.HasIndex("RatingId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId1");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("MovieNight.Domain.Models.Name", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("First");

                    b.Property<string>("Last");

                    b.Property<int?>("PrefixId");

                    b.HasKey("Id");

                    b.HasIndex("PrefixId");

                    b.ToTable("Names");
                });

            modelBuilder.Entity("MovieNight.Domain.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressId");

                    b.Property<int?>("CardHolderId");

                    b.Property<long>("CardNumber");

                    b.Property<int>("Month");

                    b.Property<int>("VerificationCode");

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("CardHolderId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("MovieNight.Domain.Models.Prefix", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Prefixes");
                });

            modelBuilder.Entity("MovieNight.Domain.Models.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("MovieNight.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressId");

                    b.Property<int?>("MembershipId");

                    b.Property<int?>("NameId");

                    b.Property<int?>("PaymentId");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("MembershipId");

                    b.HasIndex("NameId");

                    b.HasIndex("PaymentId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MovieNight.Domain.Models.Address", b =>
                {
                    b.HasOne("MovieNight.Domain.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");
                });

            modelBuilder.Entity("MovieNight.Domain.Models.Library", b =>
                {
                    b.HasOne("MovieNight.Domain.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");
                });

            modelBuilder.Entity("MovieNight.Domain.Models.Movie", b =>
                {
                    b.HasOne("MovieNight.Domain.Models.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId");

                    b.HasOne("MovieNight.Domain.Models.Rating", "Rating")
                        .WithMany()
                        .HasForeignKey("RatingId");

                    b.HasOne("MovieNight.Domain.Models.User")
                        .WithMany("Collection")
                        .HasForeignKey("UserId");

                    b.HasOne("MovieNight.Domain.Models.User")
                        .WithMany("Queue")
                        .HasForeignKey("UserId1");
                });

            modelBuilder.Entity("MovieNight.Domain.Models.Name", b =>
                {
                    b.HasOne("MovieNight.Domain.Models.Prefix", "Prefix")
                        .WithMany()
                        .HasForeignKey("PrefixId");
                });

            modelBuilder.Entity("MovieNight.Domain.Models.Payment", b =>
                {
                    b.HasOne("MovieNight.Domain.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("MovieNight.Domain.Models.Name", "CardHolder")
                        .WithMany()
                        .HasForeignKey("CardHolderId");
                });

            modelBuilder.Entity("MovieNight.Domain.Models.User", b =>
                {
                    b.HasOne("MovieNight.Domain.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("MovieNight.Domain.Models.Membership", "Membership")
                        .WithMany()
                        .HasForeignKey("MembershipId");

                    b.HasOne("MovieNight.Domain.Models.Name", "Name")
                        .WithMany()
                        .HasForeignKey("NameId");

                    b.HasOne("MovieNight.Domain.Models.Payment", "Payment")
                        .WithMany()
                        .HasForeignKey("PaymentId");
                });
#pragma warning restore 612, 618
        }
    }
}
