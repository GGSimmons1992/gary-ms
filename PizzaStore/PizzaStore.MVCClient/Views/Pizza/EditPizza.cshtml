@model PizzaStore.MVCClient.Models.PizzaViewModel
@{
    ViewData["Title"] = "EditPizza";
}

<h1>Editting Pizza # @Model.Id </h1>

@using (Html.BeginForm("Update", "Pizza"))
{
    @Html.LabelFor(m => m.crustSize, "Choose your crust size")<br>
    <div class="row">

        @for (var i = 10; i <= 20; i += 2)
        {
            <div class="col">@Html.RadioButtonFor(m => m.crustSize, i) <span>@i Inches</span> </div>
        }
    </div><br>
    @Html.LabelFor(m => m.CrustId, "Choose your crust type")<br>
    <div class="row">
        @foreach (var item in Model.AvailableCrusts)
        {
            <div class="col">@Html.RadioButtonFor(m => m.CrustId, item.CrustId) <span>@item.Name</span> </div>
        }

    </div><br>
    @foreach (var item in Model.Toppings)
    {
        <div class="row">
            <div class="col">@item</div>
            <div class="col"><span>delete topping</span></div><br>
        </div>
    }
    @for (var i = 0; i < (5-Model.Toppings.Count); i++)
    {
        <div>Choose new topping. Default is None</div>
        <div class="row">
            <div class="col">@Html.RadioButtonFor(m => m.ToppingIDArray[i], 0) <span>None</span> </div>
            @foreach (var item in Model.AvailableToppings)
            {
                <div class="col">
                    @Html.RadioButtonFor(m => m.ToppingIDArray[i], (int) item.IngredientId) <span>@item.Name</span>
                </div>
            }
        </div>
    }

    <button type="submit">Submit Changes</button>
}

